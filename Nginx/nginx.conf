worker_processes 1;

events { worker_connections 1024; }

http {

    sendfile on;
    ssl_certificate                     /etc/ssl/avp.de.crt;
    ssl_certificate_key                 /etc/ssl/avp.de.key;
    #ssl_certificate                     /etc/ssl/bundle.crt;
    #ssl_certificate_key                 /etc/ssl/.intern.avp.de.key;
    ssl_session_timeout                 1d;
    ssl_session_cache                   shared:SSL:20m;
    ssl_session_tickets                 off;
    ssl_protocols                       TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers           on;
    ssl_ciphers                         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK'; 
    ssl_stapling                        on; 
    ssl_stapling_verify                 on;

    upstream web-api {
        server api:80;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name remotely.avp.de $hostname;

        location / {
            return 301 https://$host$request_uri;
        }
    }


    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name remotely.avp.de $hostname;
        
        ssl_certificate                     /etc/ssl/avp.de.crt;
        ssl_certificate_key                 /etc/ssl/avp.de.key;

        location / {
            proxy_pass                  http://web-api;
            proxy_ssl_verify            off;
            proxy_ssl_server_name       on;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}